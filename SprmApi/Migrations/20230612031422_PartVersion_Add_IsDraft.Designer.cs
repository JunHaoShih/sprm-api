// <auto-generated />
using System;
using System.Collections.Generic;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SprmApi.Core.Customs;
using SprmApi.EFs;

#nullable disable

namespace SprmApi.Migrations
{
    [DbContext(typeof(SPRMContext))]
    [Migration("20230612031422_PartVersion_Add_IsDraft")]
    partial class PartVersion_Add_IsDraft
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SprmApi.Core.AppUsers.AppUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("full_name")
                        .HasComment("App使用者姓名");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password")
                        .HasComment("Password hash");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("username")
                        .HasComment("App使用者名稱");

                    b.HasKey("Id");

                    b.ToTable("app_users", "sprm", t =>
                        {
                            t.HasComment("App使用者");
                        });
                });

            modelBuilder.Entity("SprmApi.Core.Customs.AttributeLink", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AttributeId")
                        .HasColumnType("bigint")
                        .HasColumnName("attribute_id")
                        .HasComment("自訂屬性id");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<long>("ObjectTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("object_type_id")
                        .HasComment("物件類型id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ObjectTypeId", "AttributeId")
                        .IsUnique();

                    b.ToTable("attribute_links", "sprm", t =>
                        {
                            t.HasComment("類型屬性");
                        });
                });

            modelBuilder.Entity("SprmApi.Core.Customs.CustomAttribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AttributeType")
                        .HasColumnType("integer")
                        .HasColumnName("attribute_type")
                        .HasComment("自訂屬性類型");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<int>("DisplayType")
                        .HasColumnType("integer")
                        .HasColumnName("display_type")
                        .HasComment("自訂屬性顯示類型");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_disabled")
                        .HasComment("是否停用");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("is_system_default")
                        .HasComment("是否為系統預設");

                    b.Property<Dictionary<string, string>>("Languages")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("languages")
                        .HasComment("語系與對應翻譯");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("編號");

                    b.Property<IEnumerable<CustomOption>>("Options")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("options")
                        .HasComment("自訂選項");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("custom_attributes", "sprm", t =>
                        {
                            t.HasComment("自訂屬性");
                        });
                });

            modelBuilder.Entity("SprmApi.Core.ObjectTypes.ObjectType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("物件名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("number")
                        .HasComment("物件類型編號");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("object_types", "sprm", t =>
                        {
                            t.HasComment("物件類型");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4667),
                            CreateUser = "system",
                            Name = "料件",
                            Number = "PartVersion",
                            Remarks = "料件",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4667),
                            UpdateUser = "system"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4673),
                            CreateUser = "system",
                            Name = "料件使用關係",
                            Number = "PartUsage",
                            Remarks = "料件使用關係",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4673),
                            UpdateUser = "system"
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4676),
                            CreateUser = "system",
                            Name = "產品途程",
                            Number = "Routing",
                            Remarks = "產品途程",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4676),
                            UpdateUser = "system"
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4677),
                            CreateUser = "system",
                            Name = "產品途程版本",
                            Number = "RoutingVersion",
                            Remarks = "產品途程版本",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4678),
                            UpdateUser = "system"
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4679),
                            CreateUser = "system",
                            Name = "製程",
                            Number = "Process",
                            Remarks = "製程",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4679),
                            UpdateUser = "system"
                        },
                        new
                        {
                            Id = 6L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4682),
                            CreateUser = "system",
                            Name = "途程之製程",
                            Number = "RoutingProcess",
                            Remarks = "途程之製程",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4683),
                            UpdateUser = "system"
                        });
                });

            modelBuilder.Entity("SprmApi.Core.PartUsages.PartUsage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ChildId")
                        .HasColumnType("bigint")
                        .HasColumnName("child_id")
                        .HasComment("子零件id");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<JsonDocument>("CustomValues")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("custom_values")
                        .HasComment("自訂屬性值");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id")
                        .HasComment("父零件版本id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity")
                        .HasComment("使用數量");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId", "ChildId")
                        .IsUnique();

                    b.ToTable("part_usages", "sprm", t =>
                        {
                            t.HasComment("零件使用關係");
                        });
                });

            modelBuilder.Entity("SprmApi.Core.Parts.Part", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Checkout")
                        .HasColumnType("boolean")
                        .HasColumnName("checkout")
                        .HasComment("是否出庫");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("零件名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("料號");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.Property<int>("ViewType")
                        .HasColumnType("integer")
                        .HasColumnName("view_type")
                        .HasComment("視圖類型");

                    b.HasKey("Id");

                    b.HasIndex("Number", "ViewType")
                        .IsUnique();

                    b.ToTable("parts", "sprm", t =>
                        {
                            t.HasComment("零件");
                        });
                });

            modelBuilder.Entity("SprmApi.Core.Parts.PartVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<JsonDocument>("CustomValues")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("custom_values")
                        .HasComment("自訂屬性值");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("boolean")
                        .HasColumnName("is_draft")
                        .HasComment("是否為草稿");

                    b.Property<bool>("IsLatest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_latest")
                        .HasComment("是否為最新版");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint")
                        .HasColumnName("master_id")
                        .HasComment("master id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.Property<int>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version")
                        .HasComment("版本號");

                    b.HasKey("Id");

                    b.HasIndex("MasterId", "Version")
                        .IsUnique();

                    b.ToTable("part_versions", "sprm", t =>
                        {
                            t.HasComment("零件");
                        });
                });

            modelBuilder.Entity("SprmApi.Core.Processes.MakeTypes.MakeType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("is_system_default")
                        .HasComment("是否為系統預設");

                    b.Property<Dictionary<string, string>>("Languages")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("languages")
                        .HasComment("語系與對應翻譯");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("編號");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("make_types", "sprm", t =>
                        {
                            t.HasComment("製造類型");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4575),
                            CreateUser = "system",
                            IsSystemDefault = true,
                            Languages = new Dictionary<string, string>(),
                            Name = "自製",
                            Number = "SPRM_SELF_MADE",
                            Remarks = "System default, do not modify it",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4579),
                            UpdateUser = "system"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4583),
                            CreateUser = "system",
                            IsSystemDefault = true,
                            Languages = new Dictionary<string, string>(),
                            Name = "外包",
                            Number = "SPRM_OUTSOURCE",
                            Remarks = "System default, do not modify it",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4583),
                            UpdateUser = "system"
                        });
                });

            modelBuilder.Entity("SprmApi.Core.Processes.Process", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<int?>("DefaultExportTime")
                        .HasColumnType("integer")
                        .HasColumnName("default_export_time")
                        .HasComment("預設下料工時(毫秒)");

                    b.Property<int?>("DefaultImportTime")
                        .HasColumnType("integer")
                        .HasColumnName("default_import_time")
                        .HasComment("預設上料工時(毫秒)");

                    b.Property<long>("DefaultMakeTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("default_make_type_id")
                        .HasComment("預設製造類型id");

                    b.Property<long?>("MakeTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("製程名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("製程代碼");

                    b.Property<long>("ProcessTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("process_type_id")
                        .HasComment("製程類型id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.HasKey("Id");

                    b.HasIndex("MakeTypeId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("ProcessTypeId");

                    b.ToTable("processes", "sprm", t =>
                        {
                            t.HasComment("製程");
                        });
                });

            modelBuilder.Entity("SprmApi.Core.Processes.ProcessTypes.ProcessType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("is_system_default")
                        .HasComment("是否為系統預設");

                    b.Property<Dictionary<string, string>>("Languages")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("languages")
                        .HasComment("語系與對應翻譯");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("編號");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("process_types", "sprm", t =>
                        {
                            t.HasComment("製程類型");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4602),
                            CreateUser = "system",
                            IsSystemDefault = true,
                            Languages = new Dictionary<string, string>(),
                            Name = "加工製程",
                            Number = "SPRM_PROCESSING",
                            Remarks = "System default, do not modify it",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4602),
                            UpdateUser = "system"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4604),
                            CreateUser = "system",
                            IsSystemDefault = true,
                            Languages = new Dictionary<string, string>(),
                            Name = "檢驗製程",
                            Number = "SPRM_QUALITY_CONTROL",
                            Remarks = "System default, do not modify it",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4605),
                            UpdateUser = "system"
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4651),
                            CreateUser = "system",
                            IsSystemDefault = true,
                            Languages = new Dictionary<string, string>(),
                            Name = "組裝製程",
                            Number = "SPRM_ASSEMBLE",
                            Remarks = "System default, do not modify it",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4651),
                            UpdateUser = "system"
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4653),
                            CreateUser = "system",
                            IsSystemDefault = true,
                            Languages = new Dictionary<string, string>(),
                            Name = "運輸製程",
                            Number = "SPRM_TRANSPORT",
                            Remarks = "System default, do not modify it",
                            UpdateDate = new DateTime(2023, 6, 12, 3, 14, 22, 54, DateTimeKind.Utc).AddTicks(4653),
                            UpdateUser = "system"
                        });
                });

            modelBuilder.Entity("SprmApi.Core.RoutingProcesses.RoutingProcess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<int?>("ExportTime")
                        .HasColumnType("integer")
                        .HasColumnName("export_time")
                        .HasComment("下料工時(毫秒)");

                    b.Property<int?>("ImportTime")
                        .HasColumnType("integer")
                        .HasColumnName("import_time")
                        .HasComment("上料工時(毫秒)");

                    b.Property<long>("MakeTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("make_type_id")
                        .HasComment("製造類型id");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("途程內編號");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order")
                        .HasComment("製程順序");

                    b.Property<long>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnName("process_id")
                        .HasComment("製程id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<long>("RoutingVersionId")
                        .HasColumnType("bigint")
                        .HasColumnName("routing_version_id")
                        .HasComment("途程版本id");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.HasKey("Id");

                    b.HasIndex("MakeTypeId");

                    b.HasIndex("ProcessId");

                    b.HasIndex("RoutingVersionId", "Number")
                        .IsUnique();

                    b.ToTable("routing_processes", "sprm", t =>
                        {
                            t.HasComment("途程之製程");
                        });
                });

            modelBuilder.Entity("SprmApi.Core.Routings.Routing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("is_default")
                        .HasComment("是否為預設途程");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("產品途程名稱");

                    b.Property<long>("PartId")
                        .HasColumnType("bigint")
                        .HasColumnName("part_id")
                        .HasComment("對應料件id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.HasKey("Id");

                    b.HasIndex("PartId", "Name")
                        .IsUnique();

                    b.ToTable("routings", "sprm", t =>
                        {
                            t.HasComment("產品途程");
                        });
                });

            modelBuilder.Entity("SprmApi.Core.Routings.RoutingVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("system id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasColumnOrder(2)
                        .HasComment("Create date");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasColumnOrder(1)
                        .HasComment("Creator");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("boolean")
                        .HasColumnName("is_draft")
                        .HasComment("是否為草稿");

                    b.Property<bool>("IsLatest")
                        .HasColumnType("boolean")
                        .HasColumnName("is_latest")
                        .HasComment("是否為最新版");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint")
                        .HasColumnName("master_id")
                        .HasComment("master id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasColumnOrder(5)
                        .HasComment("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date")
                        .HasColumnOrder(4)
                        .HasComment("Update date");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasColumnOrder(3)
                        .HasComment("Updator");

                    b.Property<int>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version")
                        .HasComment("版本號");

                    b.HasKey("Id");

                    b.HasIndex("MasterId", "Version")
                        .IsUnique();

                    b.ToTable("routing_versions", "sprm", t =>
                        {
                            t.HasComment("產品途程版本");
                        });
                });

            modelBuilder.Entity("SprmApi.Core.Customs.AttributeLink", b =>
                {
                    b.HasOne("SprmApi.Core.Customs.CustomAttribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SprmApi.Core.ObjectTypes.ObjectType", "ObjectType")
                        .WithMany()
                        .HasForeignKey("ObjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("ObjectType");
                });

            modelBuilder.Entity("SprmApi.Core.PartUsages.PartUsage", b =>
                {
                    b.HasOne("SprmApi.Core.Parts.Part", "Child")
                        .WithMany()
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SprmApi.Core.Parts.PartVersion", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SprmApi.Core.Parts.PartVersion", b =>
                {
                    b.HasOne("SprmApi.Core.Parts.Part", "Master")
                        .WithMany("PartVersions")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Master");
                });

            modelBuilder.Entity("SprmApi.Core.Processes.Process", b =>
                {
                    b.HasOne("SprmApi.Core.Processes.MakeTypes.MakeType", "MakeType")
                        .WithMany()
                        .HasForeignKey("MakeTypeId");

                    b.HasOne("SprmApi.Core.Processes.ProcessTypes.ProcessType", "ProcessType")
                        .WithMany()
                        .HasForeignKey("ProcessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MakeType");

                    b.Navigation("ProcessType");
                });

            modelBuilder.Entity("SprmApi.Core.RoutingProcesses.RoutingProcess", b =>
                {
                    b.HasOne("SprmApi.Core.Processes.MakeTypes.MakeType", "MakeType")
                        .WithMany()
                        .HasForeignKey("MakeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SprmApi.Core.Processes.Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SprmApi.Core.Routings.RoutingVersion", "RoutingVersion")
                        .WithMany()
                        .HasForeignKey("RoutingVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MakeType");

                    b.Navigation("Process");

                    b.Navigation("RoutingVersion");
                });

            modelBuilder.Entity("SprmApi.Core.Routings.Routing", b =>
                {
                    b.HasOne("SprmApi.Core.Parts.Part", "Part")
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");
                });

            modelBuilder.Entity("SprmApi.Core.Routings.RoutingVersion", b =>
                {
                    b.HasOne("SprmApi.Core.Routings.Routing", "Master")
                        .WithMany()
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Master");
                });

            modelBuilder.Entity("SprmApi.Core.Parts.Part", b =>
                {
                    b.Navigation("PartVersions");
                });
#pragma warning restore 612, 618
        }
    }
}
